.. default-domain:: chpl

.. module:: In1dMsg

In1dMsg
=======
**Usage**

.. code-block:: chapel

   use In1dMsg;

.. data:: var sBound = 2**6

.. data:: var mBound = 2**25

.. function:: proc in1dGlobalAr1Bcast(ar1: [?aD1] int, ar2: [?aD2] int)

   brute force
   forward-way reduction per element of ar1 over ar2
   causes every elt in ar1 to be broadcast/communicated over ar2 

.. function:: proc in1dGlobalAr2Bcast(ar1: [?aD1] int, ar2: [?aD2] int)

   brute force
   reverse-way serial-or-reduce for each elt in ar2 over ar1
   causes every elt in ar2 to be broadcast/communicated over ar1 

.. function:: proc in1dAr2PerLocAssoc(ar1: [?aD1] int, ar2: [?aD2] int)

   put ar2 into an assoc domain of int per locale 

.. function:: proc in1dMsg(reqMsg: string, st: borrowed SymTab): string

   in1d takes two pdarray and returns a bool pdarray
   with the "in"/contains for each element tested against the second pdarray 

